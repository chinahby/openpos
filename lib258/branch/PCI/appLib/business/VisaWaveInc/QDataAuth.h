

#ifndef		_QDATAAUTH_H
#define		_QDATAAUTH_H


#ifndef		QDATAAUTH_DATA
#define		QDATAAUTH_DATA		extern
#endif

#include	<QTypeDef.h>
#include	<QDef.h>
#include	<QAppCrypt.h>


#ifdef __cplusplus
extern "C" {
#endif

#define			QPKALGOINDICATOR			0x01
#define			QHASHALGOINDICATOR			0x01
#define			QCERTIFICATIONTRAILER		0xBC
#define			QCERTIFICATIONHEADER		0x6A
#define			QIPKCERTIFICATIONFORMAT	0x02
#define			QSTATICDATASIGNEDFORMAT	0x03
#define			QICCCERTIFICATIONFORMAT	0x04
#define			QSIGNEDYNAMICDATAFORMAT	0x05

typedef	enum{QAUTHSTYLE_NONE,QAUTHSTYLE_SDA,QAUTHSTYLE_DDA,QAUTHSTYLE_CDA} QAUTHSTYLE;


typedef		struct
{
	UCHAR		aucRID[QRIDDATALEN];
	UCHAR		ucCAPKI;
	UCHAR 		ucHashInd;
	UCHAR 		ucArithInd;
	UCHAR		ucIndex;
	UCHAR 		ucModulLen;
	UCHAR 		aucModul[QMAXMODULLEN];
	UCHAR 		ucExponentLen;
	UCHAR 		aucExponent[QMAXEXPONENTLEN];
	UCHAR 		aucExpireDate[8];
	UCHAR 		aucCheckSum[QHASHDATALEN];
}QCAPK,*PQCAPK;

typedef struct {
	UCHAR 		aucRID[QRIDDATALEN];
	UCHAR		ucCAPKI;
	UCHAR	    aucCertSerial[QCERTSERIALLEN];
}QIPKREVOKE,*PQIPKREVOKE;


QDATAAUTH_DATA	USHORT		QAuthDataLen;
QDATAAUTH_DATA	UCHAR		QAuthData[QMAXAUTHDATALEN];
QDATAAUTH_DATA	USHORT		QIPKModuleLen;
QDATAAUTH_DATA	UCHAR		QIPKModule[QMAXMODULLEN];
QDATAAUTH_DATA	USHORT		QICCModuleLen;
QDATAAUTH_DATA	UCHAR		QICCModule[QMAXMODULLEN];
QDATAAUTH_DATA	UCHAR		QICCExponentLen;
QDATAAUTH_DATA	UCHAR		QICCExponent[QMAXEXPONENTLEN];
QDATAAUTH_DATA	USHORT		QICCPinModuleLen;
QDATAAUTH_DATA	UCHAR		QICCPinModule[QMAXMODULLEN];
QDATAAUTH_DATA	UCHAR		QICCPinExponentLen;
QDATAAUTH_DATA	UCHAR		QICCPinExponent[QMAXEXPONENTLEN];

void		QDATAAUTH_Init(void);
QAUTHSTYLE	QDATAAUTH_Style(PUCHAR pucAIP);
void	QDATAAUTH_SetErrorStatus(BOOL bMissData);
UCHAR	QDATAAUTH_Process(void);
UCHAR	QDATAAUTH_SDAProcess(void);
UCHAR	QDATAAUTH_RetrievalCAPK(PUCHAR pucRID,UCHAR ucCAPKI);
UCHAR	QDATAAUTH_RecoveryIPK(void);
UCHAR	QDATAAUTH_VerifyStaticAppData(void);
UCHAR	QDATAAUTH_DDAProcess(void);
UCHAR	QDATAAUTH_CDAProcess(QGACPHASE enGACPhase,QCRYPTTYPE enRespCID);
UCHAR	QDATAAUTH_RetrievalICCPK(void);
BOOL	QDATAAUTH_CheckDDADDOLValid(void);
UCHAR	QDATAAUTH_DynamicDataAuth(void);
UCHAR	QDATAAUTH_RetrievalICCPinPK(void);
BOOL	QDATAAUTH_CheckDDADataObject(void);
BOOL	QDATAAUTH_CheckAppCryptDataObject(void);
BOOL	QDATAAUTH_CheckSDADataObject(void);
UCHAR	QDATAAUTH_RecoveryICCPK(void);
BOOL	QDATAAUTH_CheckCDOLValid(PUCHAR pucCDOL);
BOOL	QATAAUTH_CheckCertVaild(UCHAR	 aucSerial[QCERTSERIALLEN]);
#ifdef __cplusplus
}
#endif
#endif


